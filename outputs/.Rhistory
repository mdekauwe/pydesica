Tair=25,
VPD=1.5,
Wind = 2,
Wleaf = 0.02,
StomatalRatio = 1,   # 2 for amphistomatous
LeafAbs = 0.86
Tair=25
VPD=1.5
Wind = 2
Wleaf = 0.02
StomatalRatio = 1
LeafAbs = 0.86
Tleaf = 21.5
Tair = 20.
gs = 0.15
PPFD = 1500; VPD = 2; Patm = 101
Wind = 2; Wleaf = 0.02
Boltz <- 5.67 * 10^-8     # w M-2 K-4
Emissivity <- 0.95        # -
LatEvap <- 2.54           # MJ kg-1
CPAIR <- 1010.0           # J kg-1 K-1
H2OLV0 <- 2.501e6         # J kg-1
H2OMW <- 18e-3            # J kg-1
AIRMA <- 29.e-3           # mol mass air (kg/mol)
AIRDENS <- 1.204          # kg m-3
UMOLPERJ <- 4.57
DHEAT <- 21.5e-6          # molecular diffusivity for heat
AIRDENS <- Patm*1000/(287.058 * Tk(Tair))
Tk <- function(x)x+273.15
AIRDENS <- Patm*1000/(287.058 * Tk(Tair))
AIRDENS
LHV <- (H2OLV0 - 2.365E3 * Tair) * H2OMW
air_density = pressure  / (c.RSPECIFC_DRY_AIR * tair_k)
air_density = pressure  / (c.RSPECIFC_DRY_AIR * tair_k)
Tk
air_density
AIRDENS
LHV <- (H2OLV0 - 2.365E3 * Tair) * H2OMW
LHV
SLOPE <- (esat(Tair + 0.1) - esat(Tair)) / 0.1
esat <- function(TdegC){
a = 613.75
b = 17.502
c = 240.97
esat = a * exp( (b * TdegC) / (c + tair) )
return(esatval)
}
SLOPE <- (esat(Tair + 0.1) - esat(Tair)) / 0.1
Tair
SLOPE <- (esat(Tair + 0.1) - esat(Tair)) / 0.1
esat <- function(TdegC){
a = 613.75
b = 17.502
c = 240.97
esat = a * exp( (b * TdegC) / (c + TdegC) )
return(esatval)
}
SLOPE <- (esat(Tair + 0.1) - esat(Tair)) / 0.1
esat <- function(TdegC){
a = 613.75
b = 17.502
c = 240.97
esatval = a * exp( (b * TdegC) / (c + TdegC) )
return(esatval)
}
SLOPE <- (esat(Tair + 0.1) - esat(Tair)) / 0.1
SLOPE
Gradiation <- 4.*Boltz*Tk(Tair)^3 * Emissivity / (CPAIR * AIRMA)
Gradiation
Emissivity
Boltz
Tk(Tair)^3
Tk(Tair)
Tk(Tair)^3.
a = Tk(Tair)^3.
a
a = Tk(Tair)**3.
a
Gradiation
wind
cmolar
CMOLAR <- Patm*1000 / (8.314 * Tk(Tair))
CMOLAR
Gbhforced <- 0.003 * sqrt(Wind/Wleaf) * CMOLAR
Gbhforced
GRASHOF <- 1.6E8 * abs(Tleaf-Tair) * (Wleaf^3)
GRASHOF
Gbhfree <- 0.5 * DHEAT * (GRASHOF^0.25) / Wleaf * CMOLAR
Gbhfree
Gbh <- 2*(Gbhfree + Gbhforced)
Gbhr <- Gbh + 2*Gradiation
Gbw <- StomatalRatio * 1.075 * Gbh  # Leuning 1995
gw <- gs*Gbw/(gs + Gbw)
gs
gq
gw
gbq
gbw
Gbw
StomatalRatio
gw
Gbh
Gbhr
Gbw <- StomatalRatio * 1.075 * Gbh  # Leuning 1995Gbw <- StomatalRatio * 1.075 * Gbh  # Leuning 1995
Gbw
gw <- gs*Gbw/(gs + Gbw)
gw
GAMMA <- CPAIR*AIRMA*Patm*1000/LHV
GAMMA
Rlongup <- Emissivity*Boltz*Tk(Tleaf)^4
Rsol <- 2*PPFD/UMOLPERJ
Rnet <- LeafAbs*Rsol - Rlongup
ea <- esat(Tair) - 1000*VPD
ema <- 0.642*(ea/Tk(Tair))^(1/7)
Rnetiso <- LeafAbs*Rsol - (1 - ema)*Boltz*Tk(Tair)^4 # isothermal net radiation
Rnetiso
PPFD
VPD
Rnetiso
Rsol <- 2*PPFD/UMOLPERJ
Rsol
PPFD/UMOLPERJ
UMOLPERJ
2.0/UMOLPERJ
ea
Rnet <- LeafAbs*Rsol - Rlongup
Rnet
ema <- 0.642*(ea/Tk(Tair))^(1/7)
ena
ema
Rnetiso <- LeafAbs*Rsol - (1 - ema)*Boltz*Tk(Tair)^4
Rnetiso
LeafAbs
LeafAbs*Rsol
(1 - ema)*Boltz*Tk(Tair)^4
ET <- (1/LHV) * (SLOPE * Rnetiso + 1000*VPD * Gbh * CPAIR * AIRMA) / (SLOPE + GAMMA * Gbhr/gw)
ET
lambdaET <- LHV * ET
lambdaET
Gbh
(SLOPE * Rnetiso + 1000*VPD * Gbh * CPAIR * AIRMA)
Rnetiso
CPAIR
AIRMA
SLOPE
(SLOPE * Rnetiso + 1000*VPD * Gbh * CPAIR * AIRMA)
Gbh
Gbh <- 2*(Gbhfree + Gbhforced)
Gbh
(SLOPE + GAMMA * Gbhr/gw)
Gbhr
gw
Gbh
Gbh <- 2*(Gbhfree + Gbhforced)
Gbh
library(ggplot2)
library(phenocamr)
install.packages("phenocamr")
library(ggplot2)
library(phenocamr)
download_phenocam(site = "harvard$",
veg_type = "DB",
roi_id = "1000",
frequency = "3")
df <- read_phenocam(file.path(tempdir(),"harvard_DB_1000_3day.csv"))
data_Harvard<-df$data
View(data_Harvard)
ggplot(data_Harvard, aes(doy, gcc_mean))+
geom_point()+
geom_smooth(method="loess", span=0.1)+
theme_classic()
ggplot(data_Harvard, aes(doy, gcc_mean, colour=year))+
geom_point()+
geom_smooth(method="loess", span=0.1)+
theme_classic()+
scale_color_viridis_c() #this can be changed to a different color scheme
ggplot(data_Harvard, aes(doy, gcc_mean, colour=year))+
geom_point()+
geom_smooth(method="loess", span=0.1)+
theme_classic()
ggplot(data_Harvard, aes(doy, gcc_mean, colour=year))+
geom_point()+
geom_smooth(method="loess", span=0.1)+
theme_classic()+scale_color_viridis_c()
ggplot(data_Harvard, aes(doy, gcc_mean, colour=year))+
geom_point()+
geom_smooth(method="loess", span=0.1)+
theme_classic()+scale_color_viridis_c()
ggplot(data_Harvard, aes(doy, gcc_mean, colour=doy))+
geom_point()+
geom_smooth(method="loess", span=0.1, col="black")+
theme_classic()+
scale_color_viridis_c()+
facet_wrap(~year)
ggplot(data_Harvard, aes(doy, gcc_mean, colour=doy))+
geom_point()+
geom_smooth(method="loess", span=0.1, col="black")+
theme_classic()+
scale_color_viridis_c()+
facet_wrap(~year)
ggplot(data_Harvard, aes(doy, gcc_mean, colour=year))+
geom_point()+
geom_smooth(method="loess", span=0.1)+
theme_classic()+scale_color_viridis_c()ggplot(data_Harvard, aes(doy, gcc_mean, colour=doy))+
geom_point()+
geom_smooth(method="loess", span=0.1, col="black")+
theme_classic()+
facet_wrap(~year)
ggplot(data_Harvard, aes(doy, gcc_mean, colour=doy))+
geom_point()+
geom_smooth(method="loess", span=0.1, col="black")+
theme_classic()+
facet_wrap(~year)
AMF_US_Ha1_BASE_HR_10_1$Year<-substr(AMF_US_Ha1_BASE_HR_10_1$Date_time, 1,4)
ggplot(data_Harvard, aes(doy, gcc_mean, colour=year))+
geom_point()+
geom_smooth(method="loess", span=0.1)+
theme_classic()
source("pcor.R")
# data
y.data <- data.frame(
hl=c(7,15,19,15,21,22,57,15,20,18),
disp=c(0.000,0.964,0.000,0.000,0.921,0.000,0.000,1.006,0.000,1.011),
deg=c(9,2,3,4,1,3,1,3,6,1),
BC=c(1.78e-02,1.05e-06,1.37e-05,7.18e-03,0.00e+00,0.00e+00,0.00e+00,4.48e-03,2.10e-06,0.00e+00)
)
# partial correlation between "hl" and "disp" given "deg" and "BC"
pcor.test(y.data$hl,y.data$disp,y.data[,c("deg","BC")])
pcor.test(y.data[,1],y.data[,2],y.data[,c(3:4)])
pcor.test(y.data[,1],y.data[,2],y.data[,-c(1:2)])
library(visreg)
library(ggplot2)
library(ppcor)
library(relaimpo)
library(tidyverse)
setwd("/Users/mdekauwe/src/python/pydesica/outputs")
setwd("/Users/mdekauwe/src/python/pydesica/outputs")
pft = "wsf"
fname <- sprintf("%s_trait_sensitivity_all.csv", pft)
df <- read.csv(fname)
df <- df[df$day_of_death> 0, ]
fit <- lm(day_of_death ~ gmin + lai + p50 + depth + Cl + Cs, data=df)
visreg(fit)
#!/usr/bin/Rscript
library(visreg)
library(ggplot2)
library(ppcor)
library(relaimpo)
library(tidyverse)
setwd("/Users/mdekauwe/src/python/pydesica/outputs")
Tmax,Dmax,Dmean,gmin,lai,p50,Cl,Cs,b,psi_e,depth,psi_stem,plc,day_of_death
pfts <- c("rf", "wsf", "dsf", "grw", "saw")
vars <- c("gmin","lai", "p50", "depth", "Cl", "Cs", "b", "psi_e")
all <- matrix(nrow=length(pfts), ncol=length(vars))
for (i in 1:length(pfts)) {
#fname <- sprintf("%s_trait_sens_OAT.csv", pfts[i])
fname <- sprintf("%s_trait_sensitivity_all.csv", pft[i])
df <- read.csv(fname)
df <- df[df$day_of_death> 0, ]
fit <- lm(day_of_death ~ gmin + lai + p50 + depth + Cl + Cs + b + psi_e, data=df)
rel_imp <- calc.relimp(fit, type=c("lmg"), rela=TRUE)
all[i,] <-  rel_imp$lmg
}
all <- cbind.data.frame(pfts, all)
colnames(all) <- c("pft","gmin","lai","p50","depth","Cl","Cs","b","psi_e")
write.csv(all,"rel_imp.csv", row.names=FALSE)
#!/usr/bin/Rscript
library(visreg)
library(ggplot2)
library(ppcor)
library(relaimpo)
library(tidyverse)
setwd("/Users/mdekauwe/src/python/pydesica/outputs")
Tmax,Dmax,Dmean,gmin,lai,p50,Cl,Cs,b,psi_e,depth,psi_stem,plc,day_of_death
pfts <- c("rf", "wsf", "dsf", "grw", "saw")
vars <- c("gmin","lai", "p50", "depth", "Cl", "Cs", "b", "psi_e")
all <- matrix(nrow=length(pfts), ncol=length(vars))
for (i in 1:length(pfts)) {
print(pft[i])
#fname <- sprintf("%s_trait_sens_OAT.csv", pfts[i])
fname <- sprintf("%s_trait_sensitivity_all.csv", pft[i])
df <- read.csv(fname)
df <- df[df$day_of_death> 0, ]
fit <- lm(day_of_death ~ gmin + lai + p50 + depth + Cl + Cs + b + psi_e, data=df)
rel_imp <- calc.relimp(fit, type=c("lmg"), rela=TRUE)
all[i,] <-  rel_imp$lmg
}
all <- cbind.data.frame(pfts, all)
colnames(all) <- c("pft","gmin","lai","p50","depth","Cl","Cs","b","psi_e")
write.csv(all,"rel_imp.csv", row.names=FALSE)
print(fname)
#!/usr/bin/Rscript
library(visreg)
library(ggplot2)
library(ppcor)
library(relaimpo)
library(tidyverse)
setwd("/Users/mdekauwe/src/python/pydesica/outputs")
Tmax,Dmax,Dmean,gmin,lai,p50,Cl,Cs,b,psi_e,depth,psi_stem,plc,day_of_death
pfts <- c("rf", "wsf", "dsf", "grw", "saw")
vars <- c("gmin","lai", "p50", "depth", "Cl", "Cs", "b", "psi_e")
all <- matrix(nrow=length(pfts), ncol=length(vars))
for (i in 1:length(pfts)) {
print(pft[i])
#fname <- sprintf("%s_trait_sens_OAT.csv", pfts[i])
fname <- sprintf("%s_trait_sensitivity_all.csv", pft[i])
print(fname)
df <- read.csv(fname)
df <- df[df$day_of_death> 0, ]
fit <- lm(day_of_death ~ gmin + lai + p50 + depth + Cl + Cs + b + psi_e, data=df)
rel_imp <- calc.relimp(fit, type=c("lmg"), rela=TRUE)
all[i,] <-  rel_imp$lmg
}
all <- cbind.data.frame(pfts, all)
colnames(all) <- c("pft","gmin","lai","p50","depth","Cl","Cs","b","psi_e")
write.csv(all,"rel_imp.csv", row.names=FALSE)
#!/usr/bin/Rscript
library(visreg)
library(ggplot2)
library(ppcor)
library(relaimpo)
library(tidyverse)
setwd("/Users/mdekauwe/src/python/pydesica/outputs")
pfts <- c("rf", "wsf", "dsf", "grw", "saw")
vars <- c("gmin","lai", "p50", "depth", "Cl", "Cs", "b", "psi_e")
all <- matrix(nrow=length(pfts), ncol=length(vars))
for (i in 1:length(pfts)) {
print(pft[i])
#fname <- sprintf("%s_trait_sens_OAT.csv", pfts[i])
fname <- sprintf("%s_trait_sensitivity_all.csv", pft[i])
print(fname)
df <- read.csv(fname)
df <- df[df$day_of_death> 0, ]
fit <- lm(day_of_death ~ gmin + lai + p50 + depth + Cl + Cs + b + psi_e, data=df)
rel_imp <- calc.relimp(fit, type=c("lmg"), rela=TRUE)
all[i,] <-  rel_imp$lmg
}
all <- cbind.data.frame(pfts, all)
colnames(all) <- c("pft","gmin","lai","p50","depth","Cl","Cs","b","psi_e")
write.csv(all,"rel_imp.csv", row.names=FALSE)
